Git para Iniciantes.

Git é um sistema de controle de versão distribuido desenvolvido pelo Linus Torvalds.

********************************
**********COMANDOS GIT**********
********************************

Entrar com email e senha para poder usar o git no computador

	git config --global user.name "<endereço de email do git>"
	git config --global user.senha "<senha para acesso>"

Para iniciar um repositório
	git init

Para verificar se há mudanças no repositório
	git status

Adicionar um unico arquivo para
	git add <nome do arquivo>

Adicionar todos os arquivos com a mesma extensão
	git add *.txt
	git add *.png
	git add *.jpg
	git add *.pdf

adicionar todos os arquivos do diretório
	git add .

Salvar mudanças do projeto
	git commit -m "<Mensagem de identificação do commit>"

Para ignorar arquivos para nao sofrerem alterações de versão
	Criar arquivo .gitignore e adicionar o nome/extensão dos arquivos la

Para pular a etapa do git add
	git commit -a -m "<Mensagem de identificação do commit>"

Para consultar todas as alterações feitas em um arquivo que está em
seu diretório de trabalho mas que ainda nao foi adicionado para sua stagearea.
	git diff

Para consultar o que há na stagearea
	git diff --staged

Visualizar alterações de todos  os commits do projeto
	git log

Visualiza os commits e os diffs de cada commit
	git log -p

Filtrar quantidade de commits
	git log -p -1,2,3,4...n

Abrir interface grafica do git
	gitk

Mostrar somente o código de cada commit e a mensagem de cada commit
	git log --pretty=oneline

Editar ultimo commit feito
	git commit --amend -m "<Mensagem do commit>"

Para tirar um arquivo da stageArea
	git reset HEAD <nome do arquivo>

Para descartar as mudanças no diretório de trabalho
	git checkout -- <nome do arquivo>	

Remover arquivos
	git rm <nome do arquivo>

Criar Tags
	git tag -a <nome da tag> "<mensagem>"

Criar uma tag com um commit antigo
	git tag -a <nome da tag> <chave do commit> -m "<mensagem>"

Para saber detalhes de uma tag
	git show <nome da tag>

Visualizar e fazer a troca dos arquivos através das tags
	git checkout <nome da tag>

Criar um branch
	git branch <nome do branch>

Fazer a copia de arquivos do branch atual para o branch criado
	git checkout <nome do novo branch>

Criar branch e fazer a cópia dos arquivos de uma só vez
	git checkout -b <nome do branch que quer criar>

Trocar de branch
	git checkout <nome do branch>

Mesclar dois branches(precisa estar no branch de destino)
	git merge <nome do branch que deseja puxar alterações>

Deletar Branch
	git branch -d <nome do branch>